#!/bin/bash
cd "$(dirname "$BASH_SOURCE")" || exit 1
source lib/daggen/core.sh      || exit 1

# usage
print_help()
{
  cat --<HELP
usage: $(basename $0) [options]

Options:
  -dag <file>       Name of DAG file to run. (default: $PWD/dag/main.dag)
  -log <file>       Name of DAGMan log file. (default: $PWD/dagman.log)
  -priority <int>   Priority of HTCondor jobs. (default: 0)
  -norescue         Remove <dag>.rescueXXX files before running DAGMan. (default: keep files)
  -nosubmit         Create submit script but do not submit DAGMan job. (default: submit)
  -h --help         Print help and exit.
HELP
}

# required commands
dagman="$(which condor_dagman)"
[ -n "$dagman" ] || { echo "Could not find condor_dagman in the PATH!" 1>&2; exit 1; }
krenew="$(which krenew)"
[ -n "$krenew" ] || { echo "Could not find krenew in the PATH!" 1>&2; exit 1; }

# parse arguments
dag=
log=
nosubmit=
rescue=true
priority=0

while [ $# -gt 0 ]; do
  case "$1" in
    -priority) optarg priority $1 "$2"; shift; ;;
    -log)      optarg log      $1 "$2"; shift; ;;
    -norescue) rescue=false; ;;
    -nosubmit) nosubmit='-no_submit'; ;;
    -h|-help|--help) print_help; exit 0; ;;
    *) print_help; error "Invalid argument: $1"; ;;
  esac
  shift
done
[ -n "$log" ] || log='dagman.log'
[ -n "$dag" ] || dag='dag/main.dag'
[ -f "$dag" ] || error "DAG file does not exist: $dag\nRun setup before to generate the DAG file(s)."

# submit condor job (even with non-existing executable) such that
# condor_submit obtains a new Kerberos TGT for this host which
# allows it to submit jobs and will be renewed periodically
# by the krenew command issued below
#
# TODO: This might not even be necessary.
condor_submit <<<"
  executable = doesnotexist
  queue" > /dev/null 2>&1

# get name of ticket cache file
cache="$(klist | grep "Ticket cache: FILE:" | cut -d: -f3)"
[ -f "$cache" ] || error "Failed to determine ticket cache, got: \"$cache\""

# make copy of ticket cache in case the DAGMan job itself is not run
# before the user logs out and OpenSSH destroys it; note that krenew
# makes a private copy of the ticket cache for the command it runs;
# therefore we do not need to wory about the lifetime of the ticket
# cache passed as argument to krenew once it is executed
krb5cc=$PWD/etc/krb5cc
cp -f "$cache" "$krb5cc" || exit 1

# write executable script which executes DAGMan using krenew
executable='bin/dagman'
cat --<<EOF > "$executable"
#!/bin/sh
exec "$krenew" -k "$krb5cc"  -- "$dagman" "\$@"
EOF
[ $? -eq 0 ] || exit 1
chmod +x "$executable" || exit 1

# remove files of previous run
rm -f "$log"
[[ $rescue == true ]] || rm -f "$dag.rescue*"

# submit DAGMan job running with krenew to avoid expiration of
# Kerberos 5 ticket granting ticket before completion of all jobs
condor_submit_dag -append "output      = $log" \
                  -append "error       = $log" \
                  -append "log         = $log" \
                  -append "environment = _CONDOR_DAGMAN_LOG=$log;_CONDOR_SCHEDD_ADDRESS_FILE=/var/log/condor/.schedd_address;_CONDOR_MAX_DAGMAN_LOG=0" \
                  -append "executable  = $executable" \
                  -f -priority $priority $nosubmit "$dag"
